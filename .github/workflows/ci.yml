name: CI
on:
  push:
    branches: [ "**" ]
  pull_request:
permissions:
  contents: read
  checks: write
  actions: read
jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: thottopilot_test
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis:7
        ports: [ "6379:6379" ]
        options: >-
          --health-cmd "redis-cli ping || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - name: Baseline env for CI
        run: |
          cp -n .env.example .env || true
          echo "NODE_ENV=test" >> .env
          echo "TEST_DATABASE_URL=postgresql://postgres:postgres@localhost:5432/thottopilot_test" >> .env
          echo "REDIS_URL=redis://localhost:6379" >> .env
      - run: npm run typecheck --if-present
      - run: npm run lint --if-present
      - run: npm test --if-present -- --reporter=default --coverage
      - run: npm run build --if-present
      - name: Env template audit
        run: npm run env:audit --if-present
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-and-logs
          path: |
            coverage/**
            logs/**
            dist/**
          if-no-files-found: ignore
