name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm test
      - run: npm run typecheck
      - run: npm run test:coverage
      - run: bash build-production.sh
      - name: Deploy to staging
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        run: bash deploy-staging.sh

  deploy:
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: bash deploy-staging.sh

  e2e-pr:
    needs: build
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    env:
      E2E_BASE_URL: ${{ secrets.E2E_BASE_URL }}
      E2E_ADMIN_EMAIL: ${{ secrets.E2E_ADMIN_EMAIL }}
      E2E_ADMIN_PASSWORD: ${{ secrets.E2E_ADMIN_PASSWORD }}
      E2E_BILLING_PLAN: ${{ secrets.E2E_BILLING_PLAN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run test:e2e

  e2e-post-deploy:
    needs:
      - build
      - deploy
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && needs.deploy.result == 'success'
    runs-on: ubuntu-latest
    env:
      E2E_BASE_URL: ${{ secrets.E2E_BASE_URL }}
      E2E_ADMIN_EMAIL: ${{ secrets.E2E_ADMIN_EMAIL }}
      E2E_ADMIN_PASSWORD: ${{ secrets.E2E_ADMIN_PASSWORD }}
      E2E_BILLING_PLAN: ${{ secrets.E2E_BILLING_PLAN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
      - run: npm ci
      - run: npm run test:e2e