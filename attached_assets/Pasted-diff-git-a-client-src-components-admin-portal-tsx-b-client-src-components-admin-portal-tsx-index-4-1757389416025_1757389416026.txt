diff --git a/client/src/components/admin-portal.tsx b/client/src/components/admin-portal.tsx
index 4a6e0f86914db07c72b811e98e91c09b3f949380..88686169c7bfd2e9d83be76ce682a57f6071acc7 100644
--- a/client/src/components/admin-portal.tsx
+++ b/client/src/components/admin-portal.tsx
@@ -38,96 +38,108 @@ import {
   Monitor,
   UserX,
   Flag,
   BarChart3,
   MapPin,
   Wifi,
   Database,
   Server,
   AlertTriangle,
   Ban,
   Trash2,
   Clock3
 } from 'lucide-react';
 
 interface _UserStats {
   totalUsers: number;
   freeUsers: number;
   proUsers: number;
   starterUsers: number;
   trialUsers: number;
   newUsersToday: number;
   activeToday: number;
   revenue: number;
 }
 
+interface AdminStats {
+  totalUsers?: number;
+  newUsersToday?: number;
+  proUsers?: number;
+  premiumUsers?: number;
+  trialUsers?: number;
+  revenue?: number;
+  activeToday?: number;
+  emailConfigured?: boolean;
+  jwtConfigured?: boolean;
+}
+
 interface TrialRequest {
   email: string;
   username: string;
   duration: number;
   tier: 'starter' | 'pro';
 }
 
 export function AdminPortal() {
   const [trialForm, setTrialForm] = useState<TrialRequest>({
     email: '',
     username: '',
     duration: 30,
     tier: 'starter'
   });
   const [_selectedUser, _setSelectedUser] = useState<unknown>(null);
   const { toast } = useToast();
   const { token } = useAuth();
   
   // Authenticated API request with JWT token
   const authenticatedRequest = async (url: string, method: string = 'GET', data?: unknown) => {
     const response = await fetch(url, {
       method,
       headers: {
         'Content-Type': 'application/json',
         'Authorization': `Bearer ${token}`
       },
       body: data ? JSON.stringify(data) : undefined
     });
     
     if (!response.ok) {
       const errorText = await response.text();
       let errorMessage;
       try {
         const errorJson = JSON.parse(errorText);
         errorMessage = errorJson.message || errorText;
       } catch {
         errorMessage = errorText || response.statusText;
       }
       throw new Error(errorMessage);
     }
     
     return response.json();
   };
 
   // Fetch user statistics
-  const { data: stats, isLoading: _statsLoading } = useQuery({
+  const { data: stats, isLoading: _statsLoading } = useQuery<AdminStats>({
     queryKey: ['/api/admin/stats'],
     refetchInterval: 30000, // Refresh every 30 seconds
     enabled: !!token
   });
 
   // Fetch all users
   const { data: users, isLoading: usersLoading, error: _usersError } = useQuery<unknown[]>({
     queryKey: ['/api/admin/users'],
     enabled: !!token
   });
 
   // Create trial user mutation
   const createTrialMutation = useMutation({
     mutationFn: (data: TrialRequest) => authenticatedRequest('/api/admin/create-trial', 'POST', data),
     onSuccess: () => {
       toast({
         title: "Trial Created Successfully",
         description: `A ${trialForm.duration}-day ${trialForm.tier} trial has been created`,
         action: <CheckCircle className="h-4 w-4 text-green-500" />
       });
       setTrialForm({ email: '', username: '', duration: 30, tier: 'starter' });
       queryClient.invalidateQueries({ queryKey: ['/api/admin/users'] });
       queryClient.invalidateQueries({ queryKey: ['/api/admin/stats'] });
     },
     onError: (error: unknown) => {
diff --git a/client/src/components/admin-portal.tsx b/client/src/components/admin-portal.tsx
index 4a6e0f86914db07c72b811e98e91c09b3f949380..88686169c7bfd2e9d83be76ce682a57f6071acc7 100644
--- a/client/src/components/admin-portal.tsx
+++ b/client/src/components/admin-portal.tsx
@@ -184,99 +196,99 @@ export function AdminPortal() {
           <div className="flex items-center justify-between">
             <div>
               <CardTitle className="text-3xl flex items-center gap-3">
                 <Shield className="h-8 w-8 text-purple-600" />
                 Admin Control Center
               </CardTitle>
               <CardDescription className="text-base mt-2">
                 Manage users, create trials, and monitor platform performance
               </CardDescription>
             </div>
             <Badge className="bg-gradient-to-r from-purple-600 to-pink-600 text-white px-4 py-2">
               <Crown className="h-4 w-4 mr-2" />
               ADMIN ACCESS
             </Badge>
           </div>
         </CardHeader>
       </Card>
 
       {/* Statistics Dashboard */}
       <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
         <Card className="bg-gradient-to-br from-blue-500/10 to-cyan-500/10 border-blue-500/20">
           <CardContent className="p-6">
             <div className="flex items-center justify-between">
               <div>
                 <p className="text-sm text-muted-foreground">Total Users</p>
-                <p className="text-3xl font-bold">{(stats as any)?.totalUsers || 0}</p>
+                <p className="text-3xl font-bold">{stats?.totalUsers ?? 0}</p>
                 <p className="text-xs text-green-600 mt-1">
-                  +{(stats as any)?.newUsersToday || 0} today
+                  +{stats?.newUsersToday ?? 0} today
                 </p>
               </div>
               <Users className="h-8 w-8 text-blue-500" />
             </div>
           </CardContent>
         </Card>
 
         <Card className="bg-gradient-to-br from-purple-500/10 to-pink-500/10 border-purple-500/20">
           <CardContent className="p-6">
             <div className="flex items-center justify-between">
               <div>
                 <p className="text-sm text-muted-foreground">Pro/Premium</p>
                 <p className="text-3xl font-bold">
-                  {((stats as any)?.proUsers || 0) + ((stats as any)?.premiumUsers || 0)}
+                  {(stats?.proUsers ?? 0) + (stats?.premiumUsers ?? 0)}
                 </p>
                 <p className="text-xs text-purple-600 mt-1">
-                  {(stats as any)?.trialUsers || 0} trials active
+                  {stats?.trialUsers ?? 0} trials active
                 </p>
               </div>
               <Crown className="h-8 w-8 text-purple-500" />
             </div>
           </CardContent>
         </Card>
 
         <Card className="bg-gradient-to-br from-green-500/10 to-emerald-500/10 border-green-500/20">
           <CardContent className="p-6">
             <div className="flex items-center justify-between">
               <div>
                 <p className="text-sm text-muted-foreground">Monthly Revenue</p>
-                <p className="text-3xl font-bold">${(stats as any)?.revenue || 0}</p>
+                <p className="text-3xl font-bold">${stats?.revenue ?? 0}</p>
                 <p className="text-xs text-green-600 mt-1">
                   <TrendingUp className="h-3 w-3 inline mr-1" />
                   12% increase
                 </p>
               </div>
               <DollarSign className="h-8 w-8 text-green-500" />
             </div>
           </CardContent>
         </Card>
 
         <Card className="bg-gradient-to-br from-orange-500/10 to-red-500/10 border-orange-500/20">
           <CardContent className="p-6">
             <div className="flex items-center justify-between">
               <div>
                 <p className="text-sm text-muted-foreground">Active Today</p>
-                <p className="text-3xl font-bold">{(stats as any)?.activeToday || 0}</p>
+                <p className="text-3xl font-bold">{stats?.activeToday ?? 0}</p>
                 <p className="text-xs text-orange-600 mt-1">
                   Real-time activity
                 </p>
               </div>
               <Activity className="h-8 w-8 text-orange-500" />
             </div>
           </CardContent>
         </Card>
       </div>
 
       {/* Management Tabs */}
       <Tabs defaultValue="live-dashboard" className="w-full">
         <TabsList className="grid w-full grid-cols-8">
           <TabsTrigger value="live-dashboard" className="flex items-center gap-2">
             <BarChart3 className="h-4 w-4" />
             Live Dashboard
           </TabsTrigger>
           <TabsTrigger value="ip-tracking" className="flex items-center gap-2">
             <Eye className="h-4 w-4" />
             IP Tracking
           </TabsTrigger>
           <TabsTrigger value="system-monitor" className="flex items-center gap-2">
             <Monitor className="h-4 w-4" />
             System
           </TabsTrigger>
diff --git a/client/src/components/admin-portal.tsx b/client/src/components/admin-portal.tsx
index 4a6e0f86914db07c72b811e98e91c09b3f949380..88686169c7bfd2e9d83be76ce682a57f6071acc7 100644
--- a/client/src/components/admin-portal.tsx
+++ b/client/src/components/admin-portal.tsx
@@ -676,58 +688,58 @@ export function AdminPortal() {
                             <SelectItem value="free">Free</SelectItem>
                             <SelectItem value="starter">Starter ($13/mo)</SelectItem>
                             <SelectItem value="pro">Pro ($29/mo)</SelectItem>
                           </SelectContent>
                         </Select>
                       </div>
                     </div>
                   )) : null
                 )}
               </div>
             </CardContent>
           </Card>
         </TabsContent>
 
         {/* Platform Settings Tab */}
         <TabsContent value="settings" className="space-y-4">
           <Card>
             <CardHeader>
               <CardTitle>Platform Configuration</CardTitle>
               <CardDescription>Manage system-wide settings and features</CardDescription>
             </CardHeader>
             <CardContent className="space-y-4">
               <Alert className="border-purple-500/30 bg-purple-500/5">
                 <Zap className="h-4 w-4 text-purple-600" />
                 <AlertDescription>
-                  <strong>Email System:</strong> {(stats as any)?.emailConfigured ? 'Configured âœ“' : 'Not configured - Add SendGrid API key'}
+                  <strong>Email System:</strong> {stats?.emailConfigured ? 'Configured âœ“' : 'Not configured - Add SendGrid API key'}
                 </AlertDescription>
               </Alert>
               
               <Alert className="border-blue-500/30 bg-blue-500/5">
                 <Shield className="h-4 w-4 text-blue-600" />
                 <AlertDescription>
-                  <strong>Security:</strong> JWT Secret {(stats as any)?.jwtConfigured ? 'Configured âœ“' : 'Using default (not secure)'}
+                  <strong>Security:</strong> JWT Secret {stats?.jwtConfigured ? 'Configured âœ“' : 'Using default (not secure)'}
                 </AlertDescription>
               </Alert>
 
               <Alert className="border-green-500/30 bg-green-500/5">
                 <Activity className="h-4 w-4 text-green-600" />
                 <AlertDescription>
                   <strong>Platform Status:</strong> All systems operational
                 </AlertDescription>
               </Alert>
             </CardContent>
           </Card>
         </TabsContent>
       </Tabs>
     </div>
   );
 }
 
 // ============================================================================
 // ADMIN FEATURE COMPONENTS
 // ============================================================================
 
 // FEATURE 5: Live Dashboard Component
 function LiveDashboardTab({ authenticatedRequest }: { authenticatedRequest: unknown }) {
   const { data: liveData, refetch } = useQuery({
     queryKey: ['/api/admin/live-dashboard'],
