diff --git a/server/caption/normalizeSafetyLevel.ts b/server/caption/normalizeSafetyLevel.ts
new file mode 100644
index 0000000..bab5eac
--- /dev/null
+++ b/server/caption/normalizeSafetyLevel.ts
@@
+export function normalizeSafetyLevel(level: string): 'safe' | 'low' | 'spicy_safe' | 'explicit' {
+  const lower = level.toLowerCase();
+  if (lower === 'high' || lower === 'safe') return 'safe';
+  if (lower === 'medium' || lower === 'moderate') return 'low';
+  if (lower === 'low' || lower === 'suggestive') return 'spicy_safe';
+  if (lower === 'explicit' || lower === 'nsfw') return 'explicit';
+  return 'safe';
+}
diff --git a/server/caption/geminiPipeline.ts b/server/caption/geminiPipeline.ts
index 872406a..4b0e905 100644
--- a/server/caption/geminiPipeline.ts
+++ b/server/caption/geminiPipeline.ts
@@
-import { CaptionArray, CaptionItem, RankResult, platformChecks } from "./schema";
+import { CaptionArray, CaptionItem, RankResult, platformChecks } from "./schema";
+import { normalizeSafetyLevel } from "./normalizeSafetyLevel";
@@
-  const json = stripToJSON(res.response.text()) as any[];
+  const json = stripToJSON(res.response.text()) as unknown[];
   // Fix common safety_level values and missing fields
   if(Array.isArray(json)){
-    json.forEach((item: any) => {
-      // Accept any safety_level from AI but normalize "suggestive"
-      if(!item.safety_level) item.safety_level = "normal";
-      else if(item.safety_level === 'suggestive') item.safety_level = 'spicy_safe';
-      // Fix other fields
-      if(!item.mood || item.mood.length < 2) item.mood = "engaging";
-      if(!item.style || item.style.length < 2) item.style = "authentic";
-      if(!item.cta || item.cta.length < 2) item.cta = "Check it out";
-      if(!item.alt || item.alt.length < 20) item.alt = "Engaging social media content";
-      if(!item.hashtags || !Array.isArray(item.hashtags)) item.hashtags = ["#content", "#creative", "#amazing"];
-      if(!item.caption || item.caption.length < 1) item.caption = "Check out this amazing content!";
-    });
+    json.forEach((item) => {
+      const variant = item as Record<string, unknown>;
+      variant.safety_level = normalizeSafetyLevel(
+        typeof variant.safety_level === 'string' ? variant.safety_level : 'safe'
+      );
+      // Fix other fields
+      if(typeof variant.mood !== 'string' || variant.mood.length < 2) variant.mood = "engaging";
+      if(typeof variant.style !== 'string' || variant.style.length < 2) variant.style = "authentic";
+      if(typeof variant.cta !== 'string' || variant.cta.length < 2) variant.cta = "Check it out";
+      if(typeof variant.alt !== 'string' || variant.alt.length < 20) variant.alt = "Engaging social media content";
+      if(!Array.isArray(variant.hashtags)) variant.hashtags = ["#content", "#creative", "#amazing"];
+      if(typeof variant.caption !== 'string' || variant.caption.length < 1) variant.caption = "Check out this amazing content!";
+    });
@@
-      const template = json[0] || {
+      const template = (json[0] as Record<string, unknown>) || {
         caption: "Check out this amazing content!",
-        alt: "Engaging social media content",
-        hashtags: ["#content", "#creative", "#amazing"],
-        cta: "Check it out",
-        mood: "engaging",
-        style: "authentic",
-        safety_level: "suggestive",
-        nsfw: false
-      };
-      json.push({...template, caption: template.caption + ` (Variant ${json.length + 1})`});
+        alt: "Engaging social media content",
+        hashtags: ["#content", "#creative", "#amazing"],
+        cta: "Check it out",
+        mood: "engaging",
+        style: "authentic",
+        safety_level: normalizeSafetyLevel('safe'),
+        nsfw: false
+      };
+      json.push({
+        ...template,
+        caption: `${template.caption as string} (Variant ${json.length + 1})`
+      });
     }
@@
-  let json = stripToJSON(res.response.text()) as any;
+  let json = stripToJSON(res.response.text()) as unknown;
@@
-  // Accept any safety_level in final result
-  if(json.final){
-    if(!json.final.safety_level) json.final.safety_level="suggestive";
-    if(!json.final.mood || json.final.mood.length<2) json.final.mood="engaging";
-    if(!json.final.style || json.final.style.length<2) json.final.style="authentic";
-    if(!json.final.cta || json.final.cta.length<2) json.final.cta="Check it out";
-    if(!json.final.alt || json.final.alt.length<20) json.final.alt="Engaging social media content";
-    if(!json.final.hashtags || !Array.isArray(json.final.hashtags)) json.final.hashtags=["#content", "#creative", "#amazing"];
-    if(!json.final.caption || json.final.caption.length<1) json.final.caption="Check out this amazing content!";
-  }
+  // Accept any safety_level in final result
+  if((json as Record<string, unknown>).final){
+    const final = (json as { final: Record<string, unknown> }).final;
+    final.safety_level = normalizeSafetyLevel(
+      typeof final.safety_level === 'string' ? final.safety_level : 'safe'
+    );
+    if(typeof final.mood !== 'string' || final.mood.length<2) final.mood="engaging";
+    if(typeof final.style !== 'string' || final.style.length<2) final.style="authentic";
+    if(typeof final.cta !== 'string' || final.cta.length<2) final.cta="Check it out";
+    if(typeof final.alt !== 'string' || final.alt.length<20) final.alt="Engaging social media content";
+    if(!Array.isArray(final.hashtags)) final.hashtags=["#content", "#creative", "#amazing"];
+    if(typeof final.caption !== 'string' || final.caption.length<1) final.caption="Check out this amazing content!";
+  }
diff --git a/server/caption/rewritePipeline.ts b/server/caption/rewritePipeline.ts
index d209314..fbf3907 100644
--- a/server/caption/rewritePipeline.ts
+++ b/server/caption/rewritePipeline.ts
@@
-import { CaptionArray, RankResult, platformChecks } from "./schema";
+import { CaptionArray, RankResult, platformChecks } from "./schema";
+import { normalizeSafetyLevel } from "./normalizeSafetyLevel";
@@
-interface CaptionResult {
-  provider: string;
-  final: any;
-  facts?: any;
-  variants?: any;
-  ranked?: any;
-}
+interface CaptionResult {
+  provider: string;
+  final: unknown;
+  facts?: unknown;
+  variants?: unknown;
+  ranked?: unknown;
+}
@@
-export async function variantsRewrite(params:{platform:"instagram"|"x"|"reddit"|"tiktok", voice:string, style?:string, mood?:string, existingCaption:string, facts?:any, hint?:string, nsfw?:boolean}){
+export async function variantsRewrite(params:{platform:"instagram"|"x"|"reddit"|"tiktok", voice:string, style?:string, mood?:string, existingCaption:string, facts?:Record<string, unknown>, hint?:string, nsfw?:boolean}){
@@
-  const json=stripToJSON(res.response.text());
+  const json=stripToJSON(res.response.text()) as unknown;
   // Fix common safety_level values and missing fields
   if(Array.isArray(json)){
-    json.forEach((item: any)=>{
-      // Accept any safety_level from AI but normalize "suggestive"
-      if(!item.safety_level) item.safety_level="suggestive";
-      else if(item.safety_level === 'suggestive') item.safety_level = 'spicy_safe';
-      // Fix other fields
-      if(!item.mood || item.mood.length<2) item.mood="engaging";
-      if(!item.style || item.style.length<2) item.style="authentic";
-      if(!item.cta || item.cta.length<2) item.cta="Check it out";
-      if(!item.alt || item.alt.length<20) item.alt="Engaging social media content";
-      if(!item.hashtags || !Array.isArray(item.hashtags)) item.hashtags=["#content", "#creative", "#amazing"];
-      if(!item.caption || item.caption.length<1) item.caption="Check out this amazing content, you'll love it and want more!";
-    });
+    json.forEach((item) => {
+      const variant = item as Record<string, unknown>;
+      variant.safety_level = normalizeSafetyLevel(
+        typeof variant.safety_level === 'string' ? variant.safety_level : 'safe'
+      );
+      // Fix other fields
+      if(typeof variant.mood !== 'string' || variant.mood.length<2) variant.mood="engaging";
+      if(typeof variant.style !== 'string' || variant.style.length<2) variant.style="authentic";
+      if(typeof variant.cta !== 'string' || variant.cta.length<2) variant.cta="Check it out";
+      if(typeof variant.alt !== 'string' || variant.alt.length<20) variant.alt="Engaging social media content";
+      if(!Array.isArray(variant.hashtags)) variant.hashtags=["#content", "#creative", "#amazing"];
+      if(typeof variant.caption !== 'string' || variant.caption.length<1) variant.caption="Check out this amazing content, you'll love it and want more!";
+    });
@@
-      const template = json[0] || {
+      const template = (json[0] as Record<string, unknown>) || {
         caption: "Check out this amazing content, you'll love it and want more!",
         alt: "Engaging social media content",
         hashtags: ["#content", "#creative", "#amazing"],
         cta: "Check it out",
         mood: "engaging",
         style: "authentic",
-        safety_level: "suggestive",
+        safety_level: normalizeSafetyLevel('safe'),
         nsfw: false
       };
-      json.push({...template, caption: template.caption + ` This enhanced version provides much more engaging content and better call-to-action for your audience! (Variant ${json.length + 1})`});
+      json.push({
+        ...template,
+        caption: `${template.caption as string} This enhanced version provides much more engaging content and better call-to-action for your audience! (Variant ${json.length + 1})`
+      });
     }
@@
-export async function rankAndSelect(variants: any[]){
+export async function rankAndSelect(variants: unknown[]){
@@
-  let json=stripToJSON(res.response.text());
+  let json=stripToJSON(res.response.text()) as unknown;
@@
-  if(json.final){
-    if(!json.final.safety_level) json.final.safety_level="suggestive";
-    if(!json.final.mood || json.final.mood.length<2) json.final.mood="engaging";
-    if(!json.final.style || json.final.style.length<2) json.final.style="authentic";
-    if(!json.final.cta || json.final.cta.length<2) json.final.cta="Check it out";
-    if(!json.final.alt || json.final.alt.length<20) json.final.alt="Engaging social media content";
-    if(!json.final.hashtags || !Array.isArray(json.final.hashtags)) json.final.hashtags=["#content", "#creative", "#amazing"];
-    if(!json.final.caption || json.final.caption.length<1) json.final.caption="Check out this amazing content!";
-  }
+  if((json as Record<string, unknown>).final){
+    const final = (json as { final: Record<string, unknown> }).final;
+    final.safety_level = normalizeSafetyLevel(
+      typeof final.safety_level === 'string' ? final.safety_level : 'safe'
+    );
+    if(typeof final.mood !== 'string' || final.mood.length<2) final.mood="engaging";
+    if(typeof final.style !== 'string' || final.style.length<2) final.style="authentic";
+    if(typeof final.cta !== 'string' || final.cta.length<2) final.cta="Check it out";
+    if(typeof final.alt !== 'string' || final.alt.length<20) final.alt="Engaging social media content";
+    if(!Array.isArray(final.hashtags)) final.hashtags=["#content", "#creative", "#amazing"];
+    if(typeof final.caption !== 'string' || final.caption.length<1) final.caption="Check out this amazing content!";
+  }
diff --git a/server/caption/textOnlyPipeline.ts b/server/caption/textOnlyPipeline.ts
index 6db2d43..84dbc73 100644
--- a/server/caption/textOnlyPipeline.ts
+++ b/server/caption/textOnlyPipeline.ts
@@
-import { CaptionArray, RankResult, platformChecks } from "./schema";
+import { CaptionArray, RankResult, platformChecks } from "./schema";
+import { normalizeSafetyLevel } from "./normalizeSafetyLevel";
@@
-    json.forEach((item: any)=>{
-      // Accept any safety_level from AI
-      if(!item.safety_level) item.safety_level="suggestive";
-      // Fix other fields
-      if(!item.mood || item.mood.length<2) item.mood="engaging";
-      if(!item.style || item.style.length<2) item.style="authentic";
-      if(!item.cta || item.cta.length<2) item.cta="Check it out";
-      if(!item.alt || item.alt.length<20) item.alt="Engaging social media content";
-      if(!item.hashtags || !Array.isArray(item.hashtags) || item.hashtags.length < 3) {
-        if(params.platform === 'instagram') {
-          item.hashtags=["#content", "#creative", "#amazing", "#lifestyle"];
-        } else {
-          item.hashtags=["#content", "#creative", "#amazing"];
-        }
-      }
-      if(!item.caption || item.caption.length<1) item.caption="Check out this amazing content!";
-    });
+    json.forEach((item) => {
+      const variant = item as Record<string, unknown>;
+      variant.safety_level = normalizeSafetyLevel(
+        typeof variant.safety_level === 'string' ? variant.safety_level : 'safe'
+      );
+      // Fix other fields
+      if(typeof variant.mood !== 'string' || variant.mood.length<2) variant.mood="engaging";
+      if(typeof variant.style !== 'string' || variant.style.length<2) variant.style="authentic";
+      if(typeof variant.cta !== 'string' || variant.cta.length<2) variant.cta="Check it out";
+      if(typeof variant.alt !== 'string' || variant.alt.length<20) variant.alt="Engaging social media content";
+      if(!Array.isArray(variant.hashtags) || variant.hashtags.length < 3) {
+        if(params.platform === 'instagram') {
+          variant.hashtags=["#content", "#creative", "#amazing", "#lifestyle"];
+        } else {
+          variant.hashtags=["#content", "#creative", "#amazing"];
+        }
+      }
+      if(typeof variant.caption !== 'string' || variant.caption.length<1) variant.caption="Check out this amazing content!";
+    });
@@
-        safety_level: "suggestive",
+        safety_level: normalizeSafetyLevel('safe'),
@@
-export async function rankAndSelect(variants: any[], params?: { platform?: string; nsfw?: boolean }){
+export async function rankAndSelect(variants: unknown[], params?: { platform?: string; nsfw?: boolean }){
@@
-    // Accept any safety_level in final result
-    if(!json.final.safety_level) json.final.safety_level="suggestive";
-    if(!json.final.mood || json.final.mood.length<2) json.final.mood="engaging";
-    if(!json.final.style || json.final.style.length<2) json.final.style="authentic";
-    if(!json.final.cta || json.final.cta.length<2) json.final.cta="Check it out";
-    if(!json.final.alt || json.final.alt.length<20) json.final.alt="Engaging social media content";
-    if(!json.final.hashtags || !Array.isArray(json.final.hashtags)) json.final.hashtags=["#content", "#creative", "#amazing"];
-    if(!json.final.caption || json.final.caption.length<1) json.final.caption="Check out this amazing content!";
+    json.final.safety_level = normalizeSafetyLevel(
+      typeof json.final.safety_level === 'string' ? json.final.safety_level : 'safe'
+    );
+    if(!json.final.mood || json.final.mood.length<2) json.final.mood="engaging";
+    if(!json.final.style || json.final.style.length<2) json.final.style="authentic";
+    if(!json.final.cta || json.final.cta.length<2) json.final.cta="Check it out";
+    if(!json.final.alt || json.final.alt.length<20) json.final.alt="Engaging social media content";
+    if(!json.final.hashtags || !Array.isArray(json.final.hashtags)) json.final.hashtags=["#content", "#creative", "#amazing"];
+    if(!json.final.caption || json.final.caption.length<1) json.final.caption="Check out this amazing content!";
   }
diff --git a/tests/integration/workflow.test.ts b/tests/integration/workflow.test.ts
index 9913892..8c9bbe6 100644
--- a/tests/integration/workflow.test.ts
+++ b/tests/integration/workflow.test.ts
@@
-      expect(result.final.safety_level).toMatch(/^(normal|spicy_safe|needs_review)$/);
+      expect(result.final.safety_level).toMatch(/^(safe|low|spicy_safe|explicit)$/);
@@
-      expect(['normal', 'spicy_safe', 'needs_review']).toContain(result.final.safety_level);
+      expect(['safe', 'low', 'spicy_safe', 'explicit']).toContain(result.final.safety_level);
diff --git a/tests/routes/caption-generation.test.ts b/tests/routes/caption-generation.test.ts
index dfae92a..3597812 100644
--- a/tests/routes/caption-generation.test.ts
+++ b/tests/routes/caption-generation.test.ts
@@
-        safety_level: expect.stringMatching(/safe|low|spicy_safe/),
+        safety_level: expect.stringMatching(/safe|low|spicy_safe|explicit/),
@@
-              safety_level: 'normal',
+              safety_level: 'safe',
@@
-        safety_level: 'normal',
+        safety_level: 'safe',
@@
-              safety_level: 'normal',
+              safety_level: 'safe',
diff --git a/tests/unit/auth/login-identifier.test.ts b/tests/unit/auth/login-identifier.test.ts
index 76139bb..d892364 100644
--- a/tests/unit/auth/login-identifier.test.ts
+++ b/tests/unit/auth/login-identifier.test.ts
@@
-import request from 'supertest';
+import request, { type Response } from 'supertest';
@@
-function extractAuthCredentials(response: any) {
+function extractAuthCredentials(response: Response) {
