// Add this to the top of your component to track completed steps
const [completedSteps, setCompletedSteps] = useState<Set<string>>(
  () => {
    // Load from localStorage on mount
    const saved = localStorage.getItem('onboarding_completed');
    return saved ? new Set(JSON.parse(saved)) : new Set();
  }
);

// Move onboardingSteps OUTSIDE the component or use useMemo
const getOnboardingSteps = (completedSteps: Set<string>): OnboardingStep[] => [
  {
    id: 'welcome',
    title: 'Welcome to ThottoPilot',
    description: 'Let\'s get you started with creating amazing content',
    completed: completedSteps.has('welcome'),
    optional: false,
    component: ( /* ... your existing component ... */ )
  },
  {
    id: 'profile',
    title: 'Complete Your Profile',
    description: 'Tell us about your content style to personalize your experience',
    completed: completedSteps.has('profile'),
    optional: false,
    component: ( /* ... your existing component ... */ )
  },
  // ... rest of your steps
];

// Use useMemo to prevent recreation unless completedSteps changes
const onboardingSteps = useMemo(
  () => getOnboardingSteps(completedSteps),
  [completedSteps]
);

// Fix handleNext to properly update state
const handleNext = () => {
  if (currentStep < onboardingSteps.length - 1) {
    // Mark current step as completed
    const currentStepId = onboardingSteps[currentStep].id;
    const newCompleted = new Set([...completedSteps, currentStepId]);
    setCompletedSteps(newCompleted);
    
    // Save to localStorage
    localStorage.setItem('onboarding_completed', JSON.stringify([...newCompleted]));
    
    // Move to next step
    setCurrentStep(currentStep + 1);
  }
};

// Add a function to reset onboarding (useful for testing)
const resetOnboarding = () => {
  setCompletedSteps(new Set());
  setCurrentStep(0);
  localStorage.removeItem('onboarding_completed');
};

// Fix the progress calculation
const completedCount = onboardingSteps.filter(step => step.completed).length;
const progress = (completedCount / onboardingSteps.length) * 100;