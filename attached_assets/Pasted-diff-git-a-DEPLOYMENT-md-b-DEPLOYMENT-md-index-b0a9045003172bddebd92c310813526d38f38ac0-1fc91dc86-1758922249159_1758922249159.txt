diff --git a/DEPLOYMENT.md b/DEPLOYMENT.md
index b0a9045003172bddebd92c310813526d38f38ac0..1fc91dc867a18db32bc19f349b7accce81a92f0a 100644
--- a/DEPLOYMENT.md
+++ b/DEPLOYMENT.md
@@ -73,28 +73,53 @@ The `dist/` directory contains all necessary files for deployment:
 ## ‚öôÔ∏è Environment Variables Required
 
 ```env
 # Database
 DATABASE_URL=your_postgres_connection_string
 
 # Optional but recommended
 NODE_ENV=production
 PORT=5000
 SESSION_SECRET=your_secure_session_secret
 
 # External Services (if used)
 SENDGRID_API_KEY=your_sendgrid_key
 GOOGLE_GENAI_API_KEY=your_gemini_key
 OPENAI_API_KEY=your_openai_key
 ```
 
 ## üìù Important Notes
 
 1. **Memory Store Warning**: The warning about MemoryStore is expected in production. For production deployments, consider using Redis or PostgreSQL for session storage.
 
 2. **Client Build**: The client needs to be built separately with `cd client && npx vite build` for production deployment.
 
 3. **Database**: Ensure your PostgreSQL database is accessible from the deployment environment.
 
+## üîê Provisioning the Admin Account
+
+Follow these steps so production only relies on hashed credentials:
+
+1. **Generate a bcrypt hash locally**
+   ```bash
+   node -e "console.log(require('bcrypt').hashSync(process.argv[1], 10))" 'StrongPassword!'
+   ```
+   Replace `StrongPassword!` with the real admin password and copy the printed hash.
+
+2. **Store deployment secrets**
+   - `ADMIN_EMAIL` ‚Äì required.
+   - `ADMIN_PASSWORD_HASH` ‚Äì the hash generated above.
+   - *(Optional)* `ADMIN_USERNAME` ‚Äì shown in the UI and used by the seed script.
+
+3. **Seed the database (if needed)**
+   Run the compiled script during deployment bootstrap so the admin row exists:
+   ```bash
+   node dist/server/scripts/create-admin.js
+   ```
+   Ensure the environment already contains the variables from step 2 before running the script.
+
+4. **Limit plaintext usage to local tooling**
+   Only mirror the plaintext password into local or QA tooling (e.g. `VITE_ADMIN_PASSWORD`, `E2E_ADMIN_PASSWORD`) and avoid storing it in shared production secrets.
+
 ## ‚ú® Deployment Ready!
 
 Your application is now ready for deployment. The build process has been tested and verified to work correctly without any module resolution errors.
