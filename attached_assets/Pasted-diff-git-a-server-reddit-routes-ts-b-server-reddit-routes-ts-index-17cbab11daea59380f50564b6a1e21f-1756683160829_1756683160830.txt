diff --git a/server/reddit-routes.ts b/server/reddit-routes.ts
index 17cbab11daea59380f50564b6a1e21f569fd55ff..d7a8c2882023b46166405184e1c4a1709e9c924f 100644
--- a/server/reddit-routes.ts
+++ b/server/reddit-routes.ts
@@ -67,56 +67,66 @@ export function registerRedditRoutes(app: Express) {
 
       // Validate state from secure store
       const stateData = await stateStore.get(`reddit_state:${state}`);
       
       if (!stateData) {
         console.error('Invalid or expired state:', state?.toString().substring(0, 8) + '...');
         return res.redirect('/dashboard?error=invalid_state');
       }
       
       // Additional security check - log if IP differs (but don't block)
       if (stateData.ip !== req.ip) {
         console.warn('IP mismatch in OAuth callback:', {
           original: stateData.ip,
           callback: req.ip,
           userId: stateData.userId
         });
       }
       
       // Clean up state immediately to prevent reuse
       await stateStore.delete(`reddit_state:${state}`);
       
       const userId = stateData.userId;
       console.log('Processing Reddit OAuth for user:', userId);
 
       // Exchange code for tokens
-      const tokenData = await exchangeRedditCode(code.toString());
-      
+      let tokenData;
+      try {
+        tokenData = await exchangeRedditCode(code.toString());
+      } catch (err) {
+        console.error('Reddit token exchange error:', err);
+        return res.redirect('/dashboard?error=reddit_token_exchange_failed');
+      }
+
       if (!tokenData || !tokenData.accessToken) {
         console.error('Failed to exchange code for tokens');
         return res.redirect('/dashboard?error=reddit_token_exchange_failed');
       }
+
+      if (!tokenData.refreshToken) {
+        console.warn('Reddit token response missing refresh token for user:', userId);
+      }
       
       // Get Reddit user info
       const tempReddit = new RedditManager(tokenData.accessToken, tokenData.refreshToken, userId);
       const profile = await tempReddit.getProfile();
       
       if (!profile) {
         console.error('Failed to fetch Reddit profile');
         return res.redirect('/dashboard?error=reddit_profile_failed');
       }
 
       console.log('Reddit profile fetched:', profile.username);
 
       // Encrypt tokens before storing
       const encryptedAccessToken = encrypt(tokenData.accessToken);
       const encryptedRefreshToken = tokenData.refreshToken ? encrypt(tokenData.refreshToken) : null;
 
       // Store account in database
       await db
         .insert(creatorAccounts)
         .values({
           userId,
           platform: 'reddit',
           handle: profile.username,
           platformUsername: profile.username,
           oauthToken: encryptedAccessToken,
