Add the resend verification function:
typescriptconst resendVerification = async (email: string) => {
  setIsResending(true);
  try {
    const res = await fetch('/api/auth/resend-verification', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ email })
    });
    
    const data = await res.json();
    toast({
      title: "Verification email sent",
      description: "Please check your inbox and spam folder"
    });
    setShowResendVerification(false);
  } catch (error) {
    toast({
      title: "Error",
      description: "Failed to resend verification email",
      variant: "destructive"
    });
  } finally {
    setIsResending(false);
  }
};
Update the login error handling to detect EMAIL_NOT_VERIFIED:
typescript// Find your login submit handler and update the error handling:
if (!response.ok) {
  const data = await response.json();
  
  // Add this EMAIL_NOT_VERIFIED check
  if (data.code === 'EMAIL_NOT_VERIFIED') {
    setShowResendVerification(true);
    setResendEmail(data.email || email);
    toast({
      title: "Email not verified",
      description: "Please verify your email to continue.",
      action: (
        <Button 
          size="sm"
          variant="outline"
          onClick={() => resendVerification(data.email || email)}
        >
          Resend
        </Button>
      )
    });
    return;
  }
  
  // Keep existing error handling for other cases
  toast({ 
    title: "Login failed", 
    description: data.message,
    variant: "destructive"
  });
}
Add the resend verification UI after your password input field:
typescript{showResendVerification && (
  <Alert className="mt-4 border-yellow-200 bg-yellow-50 dark:bg-yellow-900/20">
    <AlertCircle className="h-4 w-4 text-yellow-600" />
    <AlertDescription className="flex items-center justify-between">
      <span>Email not verified</span>
      <Button 
        variant="link" 
        size="sm"
        className="p-0 ml-2 text-purple-600 hover:text-purple-700"
        onClick={() => resendVerification(resendEmail)}
        disabled={isResending}
      >
        {isResending ? 'Sending...' : 'Resend verification'}
      </Button>
    </AlertDescription>
  </Alert>
)}
Add forgot password link before the submit button:
typescript<div className="text-right mb-4">
  <a 
    href="/forgot-password" 
    className="text-sm text-purple-600 hover:text-purple-700"
  >
    Forgot your password?
  </a>
</div>
5. UPDATE signup component to show email verification message
Find your signup/register component and add success feedback:
typescript// After successful signup response:
if (response.ok) {
  toast({
    title: "Account created!",
    description: "Please check your email to verify your account before logging in.",
    duration: 5000
  });
  
  // Optionally navigate to login
  navigate('/login?registered=true');
}
6. Add missing import if AlertCircle is not defined
typescriptimport { AlertCircle } from 'lucide-react';