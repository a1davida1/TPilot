diff --git a//dev/null b/tests/unit/workers/community-sync-worker.test.ts
index 0000000000000000000000000000000000000000..2e55ea9330db4c02b14a73b307b18502213683d5 100644
--- a//dev/null
+++ b/tests/unit/workers/community-sync-worker.test.ts
@@ -0,0 +1,66 @@
+import { describe, it, expect, beforeEach, afterEach, vi } from 'vitest';
+import { CommunitySyncWorker } from '../../../server/lib/workers/community-sync-worker.js';
+import { logger } from '../../../server/lib/logger.js';
+
+describe('CommunitySyncWorker - missing Reddit credentials', () => {
+  const envKeys: Array<keyof NodeJS.ProcessEnv> = [
+    'REDDIT_CLIENT_ID',
+    'REDDIT_CLIENT_SECRET',
+    'REDDIT_USER_AGENT',
+    'REDDIT_USERNAME',
+    'REDDIT_PASSWORD',
+    'REDDIT_REFRESH_TOKEN',
+  ];
+  const originalEnv: Partial<Record<string, string>> = {};
+
+  beforeEach(() => {
+    vi.restoreAllMocks();
+
+    envKeys.forEach((key) => {
+      if (typeof process.env[key] === 'string') {
+        originalEnv[key] = process.env[key] as string;
+      } else {
+        delete originalEnv[key];
+      }
+      delete process.env[key];
+    });
+  });
+
+  afterEach(() => {
+    envKeys.forEach((key) => {
+      if (Object.prototype.hasOwnProperty.call(originalEnv, key)) {
+        process.env[key] = originalEnv[key];
+      } else {
+        delete process.env[key];
+      }
+    });
+  });
+
+  it('skips syncing when Reddit credentials are missing', async () => {
+    const warnSpy = vi.spyOn(logger, 'warn').mockImplementation(() => logger);
+    const infoSpy = vi.spyOn(logger, 'info').mockImplementation(() => logger);
+    const errorSpy = vi.spyOn(logger, 'error').mockImplementation(() => logger);
+
+    const worker = new CommunitySyncWorker();
+    const processJob = (worker as unknown as {
+      processJob(jobData: unknown, jobId: string): Promise<void>;
+    }).processJob.bind(worker);
+
+    await expect(processJob({}, 'missing-creds')).resolves.toBeUndefined();
+
+    expect(warnSpy).toHaveBeenCalledWith(
+      'Skipping Reddit community sync because credentials are not configured',
+      expect.objectContaining({ runId: 'missing-creds' })
+    );
+    expect(errorSpy).not.toHaveBeenCalled();
+    expect(infoSpy).toHaveBeenCalledWith(
+      'Community sync job completed',
+      expect.objectContaining({
+        jobId: 'missing-creds',
+        processed: 0,
+        succeeded: 0,
+        failed: 0,
+      })
+    );
+  });
+});
