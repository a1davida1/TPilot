> tsc -p tsconfig.json --noEmit

client/src/components/__tests__/admin-communities-panel.test.tsx:69:19 - error TS2345: Argument of type 'Object' is not assignable to parameter of type 'Record<string, unknown>'.
  The 'Object' type is assignable to very few other types. Did you mean to use the 'any' type instead?
    Index signature for type 'string' is missing in type 'Object'.

69         mergeDeep(target[key], source[key]);
                     ~~~~~~~~~~~

client/src/components/__tests__/sample-upload.test.tsx:188:34 - error TS2558: Expected 0-1 type arguments, but got 2.

188 const clipboardWriteMock = vi.fn<[], Promise<void>>();
                                     ~~~~~~~~~~~~~~~~~

client/src/components/automation/SocialAutomation.tsx:39:5 - error TS2345: Argument of type 'undefined[]' is not assignable to parameter of type '{ id: string; platform: string; displayName?: string; username?: string; isActive: boolean; } | (() => { id: string; platform: string; displayName?: string; username?: string; isActive: boolean; })'.

39   >([]);
       ~~

client/src/components/automation/SocialAutomation.tsx:64:23 - error TS2345: Argument of type 'undefined[]' is not assignable to parameter of type 'SetStateAction<{ id: string; platform: string; displayName?: string; username?: string; isActive: boolean; }>'.

64           setAccounts([]);
                         ~~

client/src/components/automation/SocialAutomation.tsx:74:23 - error TS2345: Argument of type 'undefined[]' is not assignable to parameter of type 'SetStateAction<{ id: string; platform: string; displayName?: string; username?: string; isActive: boolean; }>'.

74           setAccounts([]);
                         ~~

client/src/components/automation/SocialAutomation.tsx:105:41 - error TS2677: A type predicate's type must be assignable to its parameter's type.
  Type '{ id: string; platform: string; displayName?: string; username?: string; isActive: boolean; }' is not assignable to type '{ id: string; platform: string; displayName: string; username: string; isActive: boolean; }'.
    Property 'displayName' is optional in type '{ id: string; platform: string; displayName?: string; username?: string; isActive: boolean; }' but required in type '{ id: string; platform: string; displayName: string; username: string; isActive: boolean; }'.

105           .filter((account): account is { id: string; platform: string; displayName?: string | null; username?: string | null; isActive: boolean } =>
                                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/components/automation/SocialAutomation.tsx:109:21 - error TS2345: Argument of type '{ id: string; platform: string; displayName: string; username: string; isActive: boolean; }[]' is not assignable to parameter of type 'SetStateAction<{ id: string; platform: string; displayName?: string; username?: string; isActive: boolean; }>'.

109         setAccounts(parsedAccounts);
                        ~~~~~~~~~~~~~~

client/src/components/automation/SocialAutomation.tsx:114:23 - error TS2345: Argument of type 'undefined[]' is not assignable to parameter of type 'SetStateAction<{ id: string; platform: string; displayName?: string; username?: string; isActive: boolean; }>'.

114           setAccounts([]);
                          ~~

client/src/components/automation/SocialAutomation.tsx:128:49 - error TS2339: Property 'filter' does not exist on type '{ id: string; platform: string; displayName?: string; username?: string; isActive: boolean; }'.

128   const activeAccounts = useMemo(() => accounts.filter(account => account.isActive), [accounts]);
                                                    ~~~~~~

client/src/components/automation/SocialAutomation.tsx:165:30 - error TS2339: Property 'find' does not exist on type '{ id: string; platform: string; displayName?: string; username?: string; isActive: boolean; }'.

165     const account = accounts.find(acc => acc.id === selectedAccountId);
                                 ~~~~

client/src/pages/__tests__/referral.test.tsx:19:28 - error TS2558: Expected 0-1 type arguments, but got 2.

19 const mockUseQuery = vi.fn<MockQueryResult, [MockQueryOptions]>();
                              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/__tests__/referral.test.tsx:29:59 - error TS2345: Argument of type '[MockQueryOptions]' is not assignable to parameter of type 'never'.

29     useQuery: (options: MockQueryOptions) => mockUseQuery(options),
                                                             ~~~~~~~

client/src/pages/__tests__/referral.test.tsx:58:34 - error TS2558: Expected 0-1 type arguments, but got 2.

58 const clipboardWriteText = vi.fn<Promise<void>, [string]>();
                                    ~~~~~~~~~~~~~~~~~~~~~~~

client/src/pages/phase4.tsx:325:27 - error TS2769: No overload matches this call.
  The last overload gave the following error.
    Object literal may only specify known properties, and 'className' does not exist in type 'Attributes'.

325                           className: `h-4 w-4 ${activity.color}`
                              ~~~~~~~~~

  node_modules/@types/react/index.d.ts:562:14
    562     function createElement<P extends {}>(
                     ~~~~~~~~~~~~~
    The last overload is declared here.

client/src/pages/reddit-posting.tsx:271:5 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<RedditAccount[], Error, RedditAccount[], readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<...>', gave the following error.
    Object literal may only specify known properties, and 'suspense' does not exist in type 'DefinedInitialDataOptions<RedditAccount[], Error, RedditAccount[], readonly unknown[]>'.
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<RedditAccount[], Error, RedditAccount[], readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Object literal may only specify known properties, and 'suspense' does not exist in type 'UndefinedInitialDataOptions<RedditAccount[], Error, RedditAccount[], readonly unknown[]>'.
  Overload 3 of 3, '(options: UseQueryOptions<RedditAccount[], Error, RedditAccount[], readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<RedditAccount[], Error>', gave the following error.
    Object literal may only specify known properties, and 'suspense' does not exist in type 'UseQueryOptions<RedditAccount[], Error, RedditAccount[], readonly unknown[]>'.

271     suspense: false,
        ~~~~~~~~


client/src/pages/reddit-posting.tsx:285:5 - error TS2769: No overload matches this call.
  Overload 1 of 3, '(options: DefinedInitialDataOptions<MediaAsset[], Error, MediaAsset[], readonly unknown[]>, queryClient?: QueryClient): DefinedUseQueryResult<...>', gave the following error.
    Object literal may only specify known properties, and 'suspense' does not exist in type 'DefinedInitialDataOptions<MediaAsset[], Error, MediaAsset[], readonly unknown[]>'.
  Overload 2 of 3, '(options: UndefinedInitialDataOptions<MediaAsset[], Error, MediaAsset[], readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<...>', gave the following error.
    Object literal may only specify known properties, and 'suspense' does not exist in type 'UndefinedInitialDataOptions<MediaAsset[], Error, MediaAsset[], readonly unknown[]>'.
  Overload 3 of 3, '(options: UseQueryOptions<MediaAsset[], Error, MediaAsset[], readonly unknown[]>, queryClient?: QueryClient): UseQueryResult<MediaAsset[], Error>', gave the following error.
    Object literal may only specify known properties, and 'suspense' does not exist in type 'UseQueryOptions<MediaAsset[], Error, MediaAsset[], readonly unknown[]>'.

285     suspense: false,
        ~~~~~~~~


client/src/pages/reddit-posting.tsx:290:20 - error TS2339: Property 'find' does not exist on type 'any[] | NoInfer<TQueryFnData>'.
  Property 'find' does not exist on type 'NoInfer<TQueryFnData>'.

290     () => accounts.find((account) => account.isActive) ?? null,
                       ~~~~

client/src/pages/reddit-posting.tsx:354:38 - error TS2339: Property 'filter' does not exist on type 'any[] | NoInfer<TQueryFnData>'.
  Property 'filter' does not exist on type 'NoInfer<TQueryFnData>'.

354   const selectedAssets = mediaAssets.filter((asset) => selectedMediaIds.includes(asset.id));
                                         ~~~~~~

client/src/pages/reddit-posting.tsx:712:33 - error TS2339: Property 'length' does not exist on type 'any[] | NoInfer<TQueryFnData>'.
  Property 'length' does not exist on type 'NoInfer<TQueryFnData>'.

712                   ) : accounts?.length > 0 ? (
                                    ~~~~~~

client/src/pages/reddit-posting.tsx:714:33 - error TS2339: Property 'map' does not exist on type 'any[] | NoInfer<TQueryFnData>'.
  Property 'map' does not exist on type 'NoInfer<TQueryFnData>'.

714                       {accounts.map((account) => {
                                    ~~~

client/src/pages/reddit-posting.tsx:1211:23 - error TS2322: Type 'any[] | NoInfer<TQueryFnData>' is not assignable to type 'MediaAsset[]'.
  Type 'NoInfer<TQueryFnData>' is not assignable to type 'MediaAsset[]'.
    Type 'TQueryFnData' is not assignable to type 'MediaAsset[]'.

1211                       assets={mediaAssets}
                           ~~~~~~

  node_modules/@tanstack/react-query/build/modern/useQuery.d.ts:5:27
    5 declare function useQuery<TQueryFnData = unknown, TError = DefaultError, TData = TQueryFnData, TQueryKey extends QueryKey = QueryKey>(options: DefinedInitialDataOptions<TQueryFnData, TError, TData, TQueryKey>, queryClient?: QueryClient): DefinedUseQueryResult<NoInfer<TData>, TError>;
                                ~~~~~~~~~~~~~~~~~~~~~~
    This type parameter might need an `extends MediaAsset[]` constraint.
  client/src/components/MediaLibrarySelector.tsx:16:3
    16   assets: MediaAsset[];
         ~~~~~~
    The expected type comes from property 'assets' which is declared here on type 'IntrinsicAttributes & MediaLibrarySelectorProps'

client/src/pages/reddit-posting.tsx:1338:79 - error TS2339: Property 'length' does not exist on type 'any[] | NoInfer<TQueryFnData>'.
  Property 'length' does not exist on type 'NoInfer<TQueryFnData>'.

1338                     disabled={submitting || !subreddit || !title || accounts?.length === 0}
                                                                                   ~~~~~~

client/src/pages/referral.tsx:276:18 - error TS2304: Cannot find name 'referralStats'.

276                 {referralStats.totalReferrals}
                     ~~~~~~~~~~~~~

client/src/pages/referral.tsx:279:18 - error TS2304: Cannot find name 'referralStats'.

279                 {referralStats.activeReferrals} active this month
                     ~~~~~~~~~~~~~

client/src/pages/referral.tsx:291:19 - error TS2304: Cannot find name 'referralStats'.

291                 ${referralStats.totalEarnings.toFixed(2)}
                      ~~~~~~~~~~~~~

client/src/pages/referral.tsx:294:19 - error TS2304: Cannot find name 'referralStats'.

294                 ${referralStats.pendingEarnings.toFixed(2)} pending
                      ~~~~~~~~~~~~~

client/src/pages/referral.tsx:305:18 - error TS2304: Cannot find name 'referralStats'.

305                 {referralStats.thisMonthReferrals}
                     ~~~~~~~~~~~~~

client/src/pages/referral.tsx:308:19 - error TS2304: Cannot find name 'referralStats'.

308                 ${referralStats.thisMonthEarnings.toFixed(2)} earned
                      ~~~~~~~~~~~~~

client/src/pages/referral.tsx:319:31 - error TS2304: Cannot find name 'referralStats'.

319                 {Math.max(5 - referralStats.totalReferrals, 0)}
                                  ~~~~~~~~~~~~~

client/src/pages/referral.tsx:409:21 - error TS2304: Cannot find name 'referralStats'.

409                     referralStats.totalReferrals >= tier.referrals
                        ~~~~~~~~~~~~~

client/src/pages/referral.tsx:417:23 - error TS2304: Cannot find name 'referralStats'.

417                       referralStats.totalReferrals >= tier.referrals
                          ~~~~~~~~~~~~~

client/src/pages/referral.tsx:432:20 - error TS2304: Cannot find name 'referralStats'.

432                   {referralStats.totalReferrals >= tier.referrals && (
                       ~~~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:1:10 - error TS2300: Duplicate identifier 'describe'.

1 import { describe, it, expect, vi, beforeEach } from 'vitest';
           ~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:1:20 - error TS2300: Duplicate identifier 'it'.

1 import { describe, it, expect, vi, beforeEach } from 'vitest';
                     ~~

server/caption/__tests__/ranking-integration.test.ts:1:24 - error TS2300: Duplicate identifier 'expect'.

1 import { describe, it, expect, vi, beforeEach } from 'vitest';
                         ~~~~~~

server/caption/__tests__/ranking-integration.test.ts:1:32 - error TS2300: Duplicate identifier 'vi'.

1 import { describe, it, expect, vi, beforeEach } from 'vitest';
                                 ~~

server/caption/__tests__/ranking-integration.test.ts:1:36 - error TS2300: Duplicate identifier 'beforeEach'.

1 import { describe, it, expect, vi, beforeEach } from 'vitest';
                                     ~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:4:10 - error TS2300: Duplicate identifier 'CaptionItem'.

4 import { CaptionItem } from '../schema';
           ~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:5:10 - error TS2300: Duplicate identifier 'z'.

5 import { z } from 'zod';
           ~

server/caption/__tests__/ranking-integration.test.ts:6:6 - error TS2300: Duplicate identifier 'CaptionItemType'.

6 type CaptionItemType = z.infer<typeof CaptionItem>;
       ~~~~~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:8:6 - error TS2300: Duplicate identifier 'TextModelMock'.

8 type TextModelMock = ReturnType<typeof vi.fn>;
       ~~~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:10:7 - error TS2451: Cannot redeclare block-scoped variable 'createMockResponse'.

10 const createMockResponse = (payload: unknown) => ({
         ~~~~~~~~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:16:6 - error TS2300: Duplicate identifier 'ScenarioConfig'.

16 type ScenarioConfig = {
        ~~~~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:21:7 - error TS2451: Cannot redeclare block-scoped variable 'scenarios'.

21 const scenarios: ScenarioConfig[] = [
         ~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:277:10 - error TS2300: Duplicate identifier 'describe'.

277 import { describe, it, expect, vi, beforeEach } from 'vitest';
             ~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:277:20 - error TS2300: Duplicate identifier 'it'.

277 import { describe, it, expect, vi, beforeEach } from 'vitest';
                       ~~

server/caption/__tests__/ranking-integration.test.ts:277:24 - error TS2300: Duplicate identifier 'expect'.

277 import { describe, it, expect, vi, beforeEach } from 'vitest';
                           ~~~~~~

server/caption/__tests__/ranking-integration.test.ts:277:32 - error TS2300: Duplicate identifier 'vi'.

277 import { describe, it, expect, vi, beforeEach } from 'vitest';
                                   ~~

server/caption/__tests__/ranking-integration.test.ts:277:36 - error TS2300: Duplicate identifier 'beforeEach'.

277 import { describe, it, expect, vi, beforeEach } from 'vitest';
                                       ~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:278:10 - error TS2300: Duplicate identifier 'CaptionItem'.

278 import { CaptionItem } from '../schema';
             ~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:279:10 - error TS2300: Duplicate identifier 'z'.

279 import { z } from 'zod';
             ~

server/caption/__tests__/ranking-integration.test.ts:281:6 - error TS2300: Duplicate identifier 'CaptionItemType'.

281 type CaptionItemType = z.infer<typeof CaptionItem>;
         ~~~~~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:282:6 - error TS2300: Duplicate identifier 'TextModelMock'.

282 type TextModelMock = ReturnType<typeof vi.fn>;
         ~~~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:284:7 - error TS2451: Cannot redeclare block-scoped variable 'createMockResponse'.

284 const createMockResponse = (payload: unknown) => ({
          ~~~~~~~~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:290:6 - error TS2300: Duplicate identifier 'ScenarioConfig'.

290 type ScenarioConfig = {
         ~~~~~~~~~~~~~~

server/caption/__tests__/ranking-integration.test.ts:295:7 - error TS2451: Cannot redeclare block-scoped variable 'scenarios'.

295 const scenarios: ScenarioConfig[] = [
          ~~~~~~~~~


Found 56 errors in 8 files.

Errors  Files
     1  client/src/components/__tests__/admin-communities-panel.test.tsx:69
     1  client/src/components/__tests__/sample-upload.test.tsx:188
     8  client/src/components/automation/SocialAutomation.tsx:39
     3  client/src/pages/__tests__/referral.test.tsx:19
     1  client/src/pages/phase4.tsx:325
     8  client/src/pages/reddit-posting.tsx:271
    10  client/src/pages/referral.tsx:276
    24  server/caption/__tests__/ranking-integration.test.ts:1