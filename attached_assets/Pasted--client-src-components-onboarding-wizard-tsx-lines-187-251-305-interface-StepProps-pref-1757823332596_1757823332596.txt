# client/src/components/onboarding-wizard.tsx (lines 187, 251, 305)
+ interface StepProps {
+   preferences: UserPreferences;
+   setPreferences: React.Dispatch<React.SetStateAction<UserPreferences>>;
+ }

- function WelcomeStep({ preferences, setPreferences }: unknown) {
+ function WelcomeStep({ preferences, setPreferences }: StepProps) {

- function PlatformStep({ preferences, setPreferences }: unknown) {
+ function PlatformStep({ preferences, setPreferences }: StepProps) {

- function AISetupStep({ preferences, setPreferences }: unknown) {
+ function AISetupStep({ preferences, setPreferences }: StepProps) {

# client/src/components/apple-inspired-app.tsx (line 104)
- ...data,
+ ...(data as Record<string, any>),

# client/src/components/simple-content-generator.tsx (line 46)
- ...data,
+ ...(data as Record<string, any>),

# client/src/lib/analytics-tracker.ts (line 231)
- ...data
+ ...(data as Record<string, any>)

# client/src/components/ai-generator.tsx (lines 120-126)
- Object.keys(data).forEach(key => {
+ Object.keys(data as Record<string, any>).forEach(key => {
+   const typedData = data as Record<string, any>;
-   formData.append(key, JSON.stringify(data[key]));
+   formData.append(key, JSON.stringify(typedData[key]));
-   formData.append(key, data[key]);
+   formData.append(key, typedData[key]);

# client/src/pages/phase4.tsx (lines 200, 221, 315)
- <IconComponent className={`h-5 w-5 ${stat.color}`} />
+ {IconComponent && React.createElement(IconComponent as React.ComponentType<{className: string}>, {
+   className: `h-5 w-5 ${stat.color}`
+ })}

# client/src/components/pwa/MobilePWA.tsx (lines 42, 146, 284)
- e.preventDefault();
+ (e as Event).preventDefault();

- const result = await installPrompt.prompt();
+ const result = await (installPrompt as any).prompt();

- {installPrompt && (
+ {installPrompt && <>(

# client/src/components/modern-dashboard.tsx (lines 483, 488)
- headers['Authorization'] = `Bearer ${token}`;
+ (headers as any)['Authorization'] = `Bearer ${token}`;

- headers,
+ headers as HeadersInit,

# client/src/pages/reddit-posting.tsx (lines 329, 349)
- postData.imageData = reader.result;
+ postData.imageData = reader.result as string | undefined;

- postData.images = images;
+ postData.images = images as Array<{ data: string | ArrayBuffer | null; caption: string }>;