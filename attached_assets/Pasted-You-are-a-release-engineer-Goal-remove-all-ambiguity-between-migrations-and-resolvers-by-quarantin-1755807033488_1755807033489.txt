You are a release engineer. Goal: remove all ambiguity between migrations and resolvers by quarantining duplicate SQL files, keeping only canonical resolvers, and simplifying predeploy.

### 1) Quarantine conflicting SQL migration files
- Create folder migrations/_quarantine if not exists.
- Move these files into it:
  - migrations/1755805202603_archive_saved_content_and_create_referral_codes.sql
  - migrations/canonical_feature_flags_fix.sql

Command:
mkdir -p migrations/_quarantine
mv -f migrations/1755805202603_archive_saved_content_and_create_referral_codes.sql migrations/_quarantine/ 2>/dev/null || true
mv -f migrations/canonical_feature_flags_fix.sql migrations/_quarantine/ 2>/dev/null || true

### 2) Quarantine other redundant DB fix scripts
- Create scripts/_quarantine if not exists.
- Move these files:
  - scripts/db-guarded-fixes.cjs
  - scripts/db-simple-fix.cjs
  - scripts/sql/* (whole folder)

Command:
mkdir -p scripts/_quarantine
mv -f scripts/db-guarded-fixes.cjs scripts/_quarantine/ 2>/dev/null || true
mv -f scripts/db-simple-fix.cjs scripts/_quarantine/ 2>/dev/null || true
mv -f scripts/sql scripts/_quarantine/ 2>/dev/null || true

### 3) Ensure only canonical resolvers remain
Keep these in scripts/:
- resolve-feature-flags.js
- resolve-legacy-saved-content.js
- predeploy.sh (to be replaced below)

### 4) Replace scripts/predeploy.sh
Overwrite with:

-------------------------------------------------
#!/usr/bin/env bash
set -euo pipefail

echo ">>> Running canonical DB resolvers..."
node scripts/resolve-feature-flags.js || true
node scripts/resolve-legacy-saved-content.js || true

echo ">>> Running drizzle push..."
npx drizzle-kit push --verbose || true
-------------------------------------------------

Run: chmod +x scripts/predeploy.sh

### 5) Update package.json scripts
Ensure package.json has:
"scripts": {
  "predeploy": "bash scripts/predeploy.sh",
  "db:push": "npx drizzle-kit push",
  "start": "next start"   // or your actual app start command
}

### 6) Configure deploy Start command
In Replit Deploy settings → Start command:
bash scripts/predeploy.sh && npm run start

### 7) Verify cleanup
Run:
ls -R scripts/
ls -R migrations/
npx drizzle-kit push --verbose

Expect:
- Only resolvers + predeploy remain in scripts/
- Conflicting SQL migrations quarantined
- drizzle push shows “No changes” (no rename prompts)

