	"id" varchar(100) PRIMARY KEY NOT NULL,
	"name" varchar(255) NOT NULL,
	"display_name" varchar(255) NOT NULL,
	"members" integer NOT NULL,
	"engagement_rate" integer NOT NULL,
	"category" varchar(50) NOT NULL,
	"verification_required" boolean DEFAULT false NOT NULL,
	"promotion_allowed" varchar(20) DEFAULT 'no' NOT NULL,
	"posting_limits" jsonb,
	"rules" jsonb,
	"best_posting_times" jsonb,
	"average_upvotes" integer,
	"success_probability" integer,
	"growth_trend" varchar(20),
	"mod_activity" varchar(20),
	"description" text,
	"tags" jsonb,
	"competition_level" varchar(20)
);
DROP INDEX "idx_media_assets_created";
DROP INDEX "idx_content_generations_user_created";
DROP INDEX "idx_analytics_metrics_created";
DROP INDEX "idx_leads_created";
ALTER TABLE "users" ALTER COLUMN "subscription_status" SET DEFAULT 'inactive';
CREATE INDEX "idx_media_assets_created" ON "media_assets" USING btree ("created_at");
CREATE INDEX "idx_content_generations_user_created" ON "content_generations" USING btree ("user_id","created_at");
CREATE INDEX "idx_analytics_metrics_created" ON "analytics_metrics" USING btree ("created_at");
CREATE INDEX "idx_leads_created" ON "leads" USING btree ("created_at");
ALTER TABLE "users" DROP COLUMN "subscription_tier";
ALTER TABLE "users" ADD CONSTRAINT "valid_tier_values" CHECK ((tier)::text = ANY ((ARRAY['free'::character varying, 'starter'::character varying, 'pro'::character varying, 'admin'::character varying])::text[]));
ALTER TABLE "users" ADD CONSTRAINT "valid_subscription_status" CHECK ((subscription_status)::text = ANY ((ARRAY['active'::character varying, 'inactive'::character varying, 'cancelled'::character varying, 'past_due'::character varying])::text[]));
You may notice a temporary downtime of your deployment. What's happening?
Database changes sometimes require stopping your app temporarily to avoid conflicts during the update process
This prevents data loss or corruption that could happen if users were still using the app during the change
Migrations failed validation, please review
Your database schema changes conflict with existing production data and could not be applied, learn more. To resolve this, you can:

Copy your development database schema & data to production.

Cancel deployment and retry once your schema conflicts are resolved.
Failed to run database migration statement
ALTER TABLE "users" ADD CONSTRAINT "valid_subscription_status" CHECK ((subscription_status)::text = ANY ((ARRAY['active'::character varying, 'inactive'::character varying, 'cancelled'::character varying, 'past_due'::character varying])::text[]));
check constraint "valid_subscription_status" of relation "users" is violated by some row