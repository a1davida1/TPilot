ðŸ”§ Fix #1: Update Reddit OAuth Route with Proper State HandlingIn server/auth.ts, update the Reddit routes:typescript// Add this import at the top
import crypto from 'crypto';

// Update the Reddit OAuth initiation (around line 190)
app.get('/api/auth/reddit', (req, res) => {
  const clientId = process.env.REDDIT_CLIENT_ID;
  
  if (!clientId) {
    return res.status(500).json({ message: 'Reddit OAuth not configured' });
  }

  // Generate a random state and store it in session
  const state = crypto.randomBytes(32).toString('hex');
  
  // Store state in session for validation
  req.session.redditOAuthState = state;
  req.session.save();

  const redirectUri = encodeURIComponent('https://thottopilot.com/api/auth/reddit/callback');
  
  const authUrl = `https://www.reddit.com/api/v1/authorize?client_id=${clientId}&response_type=code&state=${state}&redirect_uri=${redirectUri}&duration=permanent&scope=identity+read+submit`;
  
  console.log('Reddit OAuth initiated with state:', state);
  res.redirect(authUrl);
});

// Update the Reddit callback (around line 208)
app.get('/api/auth/reddit/callback', async (req: unknown, res) => {
  try {
    const { code, error, state } = req.query;
    
    // Validate state parameter
    const sessionState = req.session.redditOAuthState;
    
    if (!state || state !== sessionState) {
      console.error('State mismatch:', { received: state, expected: sessionState });
      return res.redirect('/dashboard?error=reddit_invalid_state');
    }
    
    // Clear the state from session
    delete req.session.redditOAuthState;
    
    if (error) {
      return res.redirect(`/dashboard?error=${error}`);
    }
    
    if (!code) {
      return res.redirect('/dashboard?error=no-code');
    }

    // Exchange code for access token
    const tokenResponse = await fetch('https://www.reddit.com/api/v1/access_token', {
      method: 'POST',
      headers: {
        'Authorization': `Basic ${Buffer.from(`${process.env.REDDIT_CLIENT_ID}:${process.env.REDDIT_CLIENT_SECRET}`).toString('base64')}`,
        'Content-Type': 'application/x-www-form-urlencoded',
        'User-Agent': 'ThottoPilot/1.0'
      },
      body: new URLSearchParams({
        grant_type: 'authorization_code',
        code: code as string,
        redirect_uri: 'https://thottopilot.com/api/auth/reddit/callback'
      })
    });

    const tokenData = await tokenResponse.json();
    
    if (!tokenData.access_token) {
      console.error('No access token received:', tokenData);
      return res.redirect('/dashboard?error=token-failed');
    }

    // Get Reddit user info
    const userResponse = await fetch('https://oauth.reddit.com/api/v1/me', {
      headers: {
        'Authorization': `Bearer ${tokenData.access_token}`,
        'User-Agent': 'ThottoPilot/1.0'
      }
    });

    const redditUser = await userResponse.json();
    
    // Store in session or update user
    req.session.redditConnected = true;
    req.session.redditUsername = redditUser.name;
    req.session.save();

    // Redirect to the NEW dashboard, not old one
    res.redirect('/dashboard?reddit=connected');
    
  } catch (error) {
    console.error('Reddit OAuth callback error:', error);
    res.redirect('/dashboard?error=oauth-failed');
  }
});ðŸ”§ Fix #2: Ensure Session is Configured ProperlyIn server/routes.ts, make sure session is configured BEFORE auth routes (around line 90):typescript// Session configuration (should be BEFORE auth routes)
app.use(session({
  store,
  secret: SESSION_SECRET || 'your-secret-key-change-this',
  resave: false,
  saveUninitialized: true, // Changed to true for OAuth
  cookie: {
    secure: IS_PRODUCTION,
    httpOnly: true,
    maxAge: 24 * 60 * 60 * 1000,
    sameSite: 'lax'
  }
}));

// THEN setup auth (this should come AFTER session)
setupAuth(app);