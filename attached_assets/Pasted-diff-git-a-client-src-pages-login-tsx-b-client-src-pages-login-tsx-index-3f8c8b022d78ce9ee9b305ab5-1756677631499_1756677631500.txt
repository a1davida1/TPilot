diff --git a/client/src/pages/login.tsx b/client/src/pages/login.tsx
index 3f8c8b022d78ce9ee9b305ab5b70138a378e82f1..f45165fcf08c4f7040d72ad0cab0c4599cbc99eb 100644
--- a/client/src/pages/login.tsx
+++ b/client/src/pages/login.tsx
@@ -49,54 +49,78 @@ export default function Login() {
         });
         setView('login');
       }
     },
     onError: (error: unknown) => {
       toast({
         title: view === 'login' ? "Login failed" : "Signup failed",
         description: error.message || "Please check your credentials and try again.",
         variant: "destructive",
       });
     }
   });
 
   const handleSubmit = (e: React.FormEvent) => {
     e.preventDefault();
     
     if (view === 'signup') {
       if (password !== confirmPassword) {
         toast({
           title: "Passwords don't match",
           description: "Please make sure both passwords are the same.",
           variant: "destructive",
         });
         return;
       }
-      if (password.length < 6) {
+      if (password.length < 8) {
         toast({
           title: "Password too short",
-          description: "Password must be at least 6 characters long.",
+          description: "Password must be at least 8 characters long.",
+          variant: "destructive",
+        });
+        return;
+      }
+      if (!/[a-z]/.test(password)) {
+        toast({
+          title: "Add a lowercase letter",
+          description: "Password must contain at least one lowercase letter.",
+          variant: "destructive",
+        });
+        return;
+      }
+      if (!/[A-Z]/.test(password)) {
+        toast({
+          title: "Add an uppercase letter",
+          description: "Password must contain at least one uppercase letter.",
+          variant: "destructive",
+        });
+        return;
+      }
+      if (!/\d/.test(password)) {
+        toast({
+          title: "Add a number",
+          description: "Password must contain at least one number.",
           variant: "destructive",
         });
         return;
       }
     }
 
     authMutation.mutate({
       email,
       password,
       username: view === 'signup' ? username : undefined,
       mode: view === 'signup' ? 'signup' : 'login'
     });
   };
 
   // Landing Page View
   if (view === 'landing') {
     return (
       <div className="min-h-screen bg-white">
         {/* Hero Section */}
         <div className="relative overflow-hidden">
           <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-20">
             <div className="text-center">
               <div className="flex items-center justify-center mb-6">
                 <div className="bg-gradient-to-r from-purple-600 to-blue-600 p-4 rounded-2xl">
                   <Sparkles className="h-12 w-12 text-white" />
