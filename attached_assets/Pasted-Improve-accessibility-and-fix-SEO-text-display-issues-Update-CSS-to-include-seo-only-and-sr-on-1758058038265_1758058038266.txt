Improve accessibility and fix SEO text display issues
Update CSS to include `.seo-only` and `.sr-only` classes for accessibility and SEO. Modify unit tests in `queue-initialization.test.ts` to handle potential undefined return types and string checking for log messages.

Replit-Commit-Author: Agent
Replit-Commit-Session-Id: e383427d-babb-453b-94e4-d1a76301afc3
Replit-Commit-Checkpoint-Type: full_checkpoint
Replit-Commit-Screenshot-Url: https://storage.googleapis.com/screenshot-production-us-central1/47c39765-2fd8-471f-bcbe-a75d33827b1d/e383427d-babb-453b-94e4-d1a76301afc3/UauQSH3
main
1 parent 
c6ead75
 commit 
e15e89c
2 files changed
+8
-4
lines changed
Search within code
 
Customizable line height
The default line height has been increased for improved accessibility. You can choose to enable a more compact line height from the view settings menu.

‎client/src/index.css
+3
-1
Lines changed: 3 additions & 1 deletion
Original file line number	Diff line number	Diff line change
@@ -666,7 +666,9 @@ td {
  }

  /* Accessibility utilities */
  .visually-hidden {
  .visually-hidden,
  .seo-only,
  .sr-only {
    position: absolute !important;
    width: 1px !important;
    height: 1px !important;
‎tests/unit/workers/queue-initialization.test.ts
+5
-3
Lines changed: 5 additions & 3 deletions
Original file line number	Diff line number	Diff line change
@@ -5,7 +5,7 @@ import { logger } from '../../../server/lib/logger.js';

// Mock logging methods
const logSpy = vi.spyOn(console, 'log').mockImplementation(() => {});
const infoSpy = vi.spyOn(logger, 'info').mockImplementation(() => {});
const infoSpy = vi.spyOn(logger, 'info').mockImplementation(() => undefined as any);

describe('Worker Queue Initialization', () => {
  beforeEach(async () => {
@@ -36,7 +36,9 @@ describe('Worker Queue Initialization', () => {
      await initializeQueue();

      // Should log which queue backend is being used
      const hasQueueLog = logSpy.mock.calls.some(([msg]) => msg.includes('queue backend'));
      const hasQueueLog = logSpy.mock.calls.some(([msg]: any[]) => 
        typeof msg === 'string' && msg.includes('queue backend')
      );
      expect(logSpy).toHaveBeenCalled();
    });
  });
@@ -47,7 +49,7 @@ describe('Worker Queue Initialization', () => {

      // Should log initialization progress
      const infoCalls = infoSpy.mock.calls.flat();
      const hasWorkerLog = infoCalls.some(call =>
      const hasWorkerLog = infoCalls.some((call: any) =>
        typeof call === 'string' && call.includes('worker initialized')
      );
      expect(infoSpy).toHaveBeenCalled();