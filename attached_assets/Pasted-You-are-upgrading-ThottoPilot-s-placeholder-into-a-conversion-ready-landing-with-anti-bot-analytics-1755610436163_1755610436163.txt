You are upgrading ThottoPilot’s placeholder into a conversion-ready landing with anti-bot, analytics events, and a waitlist. Minimal diffs, typed code, basic tests.

## Goals
- Landing page (SFW) with clear value prop and a single CTA.
- Waitlist capture: email + platform multi-select + free-text pain point.
- Anti-bot: Cloudflare Turnstile (fallback to basic rate-limit if env missing).
- Store UTM + referrer with each lead.
- Double opt-in email via Resend (or SendGrid).
- Admin page: list/search/export leads (CSV).
- Analytics events: `lead_created`, `lead_confirmed`.

## Env (extend zod validation)
RESEND_API_KEY
TURNSTILE_SITE_KEY
TURNSTILE_SECRET_KEY
APP_BASE_URL
ANALYTICS_WRITE_KEY (optional)
UTM_COOKIE_TTL_DAYS=30

## Prisma (add model if not present)
model Lead {
  id            String   @id @default(cuid())
  email         String   @unique
  platformTags  String[] // ["reddit","x","onlyfans","fansly"]
  painPoint     String?
  utmSource     String?
  utmMedium     String?
  utmCampaign   String?
  utmContent    String?
  utmTerm       String?
  referrer      String?
  confirmedAt   DateTime?
  createdAt     DateTime @default(now())
}

## Files to add
src/app/(marketing)/page.tsx                // landing
src/app/api/leads/route.ts                  // POST create
src/app/api/leads/confirm/route.ts          // GET confirm?token=...
src/lib/turnstile.ts                        // server verify
src/lib/utm.ts                              // parse/save UTM cookie
src/lib/mailer.ts                           // sendDoubleOptIn(email, token)
src/app/admin/leads/page.tsx                // gated admin view
tests/unit/leads.test.ts

## Implementation details
- Landing page:
  - Headline: “AI Promo Copilot for NSFW Creators”
  - Bullets: (a) caption + schedule with rule checks, (b) image library with protection, (c) time-of-day optimizer.
  - Form: email (required), platform multi-select, painPoint textarea.
  - Include Turnstile widget; if env not set, show but bypass verify in dev.
  - On submit -> POST /api/leads with body {email, platformTags, painPoint, utm*, referrer}.
  - Set a UTM cookie from initial visit; merge with query params on submit.

- /api/leads (POST):
  1) Verify Turnstile (secret).
  2) Upsert Lead by email (update fields, keep earliest createdAt).
  3) Create a confirm token: sign (email + timestamp) with HMAC (server secret) and store ephemeral token in a simple table OR encode in the link (stateless with short TTL).
  4) sendDoubleOptIn(email, link=`${APP_BASE_URL}/api/leads/confirm?token=...`)
  5) Emit analytics event `lead_created` (no-op if missing key).
  6) Return 200.

- /api/leads/confirm (GET):
  1) Validate token (HMAC + 48h TTL).
  2) Mark Lead.confirmedAt = now; return a simple thank-you page with a short 3-question survey link (just a link; no need to implement).
  3) Emit `lead_confirmed`.

- Admin page (/admin/leads):
  - Auth: restrict to ADMIN_EMAIL_WHITELIST if present; else current user must have isAdmin (assume existing or implement simple email check).
  - Table: email, platforms, createdAt, confirmedAt, utmSource/Medium/Campaign, referrer, painPoint (truncated).
  - Export CSV button.

- Turnstile:
  - Client: include site key widget on form.
  - Server: POST verify to `https://challenges.cloudflare.com/turnstile/v0/siteverify`.
  - Fail → 400.

- UTM handling:
  - src/lib/utm.ts: read from query params on landing, set cookie (TTL UTM_COOKIE_TTL_DAYS).
  - On submit, combine cookie + current query.

- Tests:
  - POST /api/leads with missing email → 400
  - POST /api/leads succeeds when Turnstile passes → creates/updates Lead
  - Confirm route with bad/expired token → 400; with good token → sets confirmedAt
  - UTM merge unit test

## Acceptance
- [ ] Landing shows form; anti-bot active; successful submit sends confirmation email.
- [ ] Confirm link marks Lead.confirmedAt and renders thank-you page.
- [ ] UTM and referrer stored with lead.
- [ ] Admin leads page lists, filters, and exports CSV.
- [ ] Unit tests pass.

Keep diffs minimal and summarize files changed plus any env/setup needed.
