diff --git a/server/reddit-routes.ts b/server/reddit-routes.ts
@@
-import { redditCommunitiesDatabase, getCommunityInsights } from './reddit-communities.js';
+import {
+  listCommunities,
+  searchCommunities,
+  getCommunityInsights,
+  createCommunity,
+  updateCommunity,
+  deleteCommunity
+} from './reddit-communities.js';
@@
-      let communities = redditCommunitiesDatabase;
-
-      if (category && category !== 'all') {
-        communities = communities.filter(c => c.category === category);
-      }
-
-      if (search) {
-        const term = (search as string).toLowerCase();
-        communities = communities.filter(c =>
-          c.name.toLowerCase().includes(term) ||
-          c.displayName.toLowerCase().includes(term) ||
-          c.description.toLowerCase().includes(term) ||
-          c.tags.some(tag => tag.toLowerCase().includes(term))
-        );
-      }
-
-      res.json(communities);
+      let communities = search
+        ? await searchCommunities(search as string)
+        : await listCommunities();
+      if (category && category !== 'all') {
+        communities = communities.filter(c => c.category === category);
+      }
+      res.json(communities);
@@
   app.get('/api/reddit/community-insights/:communityId', async (req, res) => {
@@
   });
+
+  // Admin CRUD endpoints
+  app.post('/api/reddit/communities', authenticateToken, async (req: unknown, res) => {
+    if (!req.user?.isAdmin) return res.status(403).json({ error: 'Forbidden' });
+    try {
+      const community = await createCommunity(req.body);
+      res.json(community);
+    } catch (e) {
+      res.status(400).json({ error: 'Invalid community data' });
+    }
+  });
+
+  app.put('/api/reddit/communities/:id', authenticateToken, async (req: unknown, res) => {
+    if (!req.user?.isAdmin) return res.status(403).json({ error: 'Forbidden' });
+    try {
+      const community = await updateCommunity(req.params.id, req.body);
+      res.json(community);
+    } catch (e) {
+      res.status(400).json({ error: 'Invalid community data' });
+    }
+  });
+
+  app.delete('/api/reddit/communities/:id', authenticateToken, async (req: unknown, res) => {
+    if (!req.user?.isAdmin) return res.status(403).json({ error: 'Forbidden' });
+    try {
+      await deleteCommunity(req.params.id);
+      res.json({ success: true });
+    } catch (e) {
+      res.status(500).json({ error: 'Failed to delete community' });
+    }
+  });
