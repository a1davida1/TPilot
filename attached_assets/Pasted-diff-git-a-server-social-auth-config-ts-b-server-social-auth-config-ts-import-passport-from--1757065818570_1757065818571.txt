diff --git a/server/social-auth-config.ts b/server/social-auth-config.ts
@@
-import passport from 'passport';
-import { Strategy as GoogleStrategy } from 'passport-google-oauth20';
-import { Strategy as FacebookStrategy } from 'passport-facebook';
-import { storage } from './storage';
-import type { User } from '@shared/schema';
+import passport from 'passport';
+import { Strategy as GoogleStrategy } from 'passport-google-oauth20';
+import { Strategy as FacebookStrategy } from 'passport-facebook';
+import redditStrategyPkg from 'passport-reddit';            // CJS module
+const RedditStrategy = redditStrategyPkg.Strategy;
+import { storage } from './storage';
+import type { User } from '@shared/schema';
@@
-  // Reddit OAuth Strategy - temporarily disabled due to import issues
-  // Will be enabled once passport-reddit ES module compatibility is resolved
-  // if (process.env.REDDIT_CLIENT_ID && process.env.REDDIT_CLIENT_SECRET) {
-  //   // Reddit strategy implementation
-  // }
+  // Reddit OAuth Strategy
+  if (process.env.REDDIT_CLIENT_ID && process.env.REDDIT_CLIENT_SECRET) {
+    passport.use(
+      new RedditStrategy(
+        {
+          clientID: process.env.REDDIT_CLIENT_ID,
+          clientSecret: process.env.REDDIT_CLIENT_SECRET,
+          callbackURL: '/api/reddit/callback',
+          scope: ['identity'],
+          duration: 'permanent',
+          state: true,
+        },
+        async (accessToken, refreshToken, profile, done) => {
+          await handleSocialAuth(
+            'reddit',
+            {
+              id: profile.id,
+              username: profile.name,
+              emails: [],
+              photos: [{ value: profile.icon_img }],
+            },
+            done,
+          );
+        },
+      ),
+    );
+  }
@@
   // Google routes
   googleAuth: passport.authenticate('google', { scope: ['profile', 'email'] }),
   googleCallback: passport.authenticate('google', {
     failureRedirect: '/login?error=google_auth_failed',
-    successRedirect: '/'
+    successRedirect: '/dashboard'
   }),
@@
   // Reddit routes
   redditAuth: passport.authenticate('reddit', {
     state: 'reddit-auth-state',
     duration: 'permanent'
   } as any),
   redditCallback: passport.authenticate('reddit', {
-    failureRedirect: '/login?error=reddit_auth_failed',
-    successRedirect: '/'
+    failureRedirect: '/login?error=reddit_auth_failed',
+    successRedirect: '/dashboard?reddit=connected'
   })
 };
