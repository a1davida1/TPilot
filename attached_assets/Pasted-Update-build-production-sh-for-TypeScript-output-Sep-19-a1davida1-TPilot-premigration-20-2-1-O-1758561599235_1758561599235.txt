Update build-production.sh for TypeScript output
Sep 19 · a1davida1/TPilot · premigration
+20-2
1. Open `build-production.sh`.
2. Remove the `| head -3` pipeline from the `npx tsc -p tsconfig.server.json --listFiles` command, or alternatively capture the output without terminating `tsc` (e.g., redirect to a log file).
3. If trimmed output is still desired, enable `set -o pipefail` and pipe through `tee`/`head` in a subshell so that a non-zero `tsc` exit code aborts the script.
4. Re-run the build to verify the script now stops on genuine TypeScript errors.

Summary

    Enabled set -euo pipefail, ensured the logs directory exists, and redirected the server tsc --listFiles output to a reusable log while echoing a short preview so operators can still inspect the first few entries without masking real compiler failures.

Testing

    ✅ bash build-production.sh – script now aborts immediately on the repository’s existing TypeScript errors, confirming the pipeline no longer masks failures.

❌ npm run lint – fails with numerous pre-existing lint errors in the project; no new lint issues were introduced by this change.

❌ npm test – encountered extensive pre-existing integration/unit test failures and was interrupted after confirming the issues are unrelated to this change.


build-production.sh
+20-2
#!/bin/bash
set -e
set -euo pipefail

LOG_DIR="logs"
TS_SERVER_FILE_LOG="$LOG_DIR/tsc-server-files.log"

mkdir -p "$LOG_DIR"

echo "🔨 Building ThottoPilot for production..."

# Clean previous builds
echo "📦 Cleaning previous builds..."
rm -rf dist

echo "📂 Creating dist directory structure..."
mkdir -p dist/server

echo "⚙️ Compiling server TypeScript..."
echo "Current directory: $(pwd)"
echo "TSConfig file exists: $(test -f tsconfig.server.json && echo 'yes' || echo 'no')"
npx tsc -p tsconfig.server.json --listFiles | head -3
echo "📄 Saving TypeScript file list to $TS_SERVER_FILE_LOG"
npx tsc -p tsconfig.server.json --listFiles > "$TS_SERVER_FILE_LOG"
if [ -s "$TS_SERVER_FILE_LOG" ]; then
  echo "First TypeScript files included in build:"
  head -n 3 "$TS_SERVER_FILE_LOG" | sed 's/^/  /'
  line_count=$(wc -l < "$TS_SERVER_FILE_LOG")
  if [ "$line_count" -gt 3 ]; then
    echo "  ... (full list written to $TS_SERVER_FILE_LOG)"
  else
    echo "  (complete list above)"
  fi
else
  echo "⚠️ No TypeScript files listed; check $TS_SERVER_FILE_LOG for details."
fi
echo "Compilation finished, checking output..."

# Check if the compiled server file exists
if [ ! -f dist/server/index.js ]; then
  echo "❌ Server build failed: dist/server/index.js missing"
  echo "Checking build output..."
  ls -la dist/server/ || echo "No dist/server directory found"
  if [ -d dist/server ]; then
    echo "Contents of dist/server:"
    find dist/server -name "*.js" -type f | head -10
  fi
  echo "TypeScript compilation may have failed or output to wrong directory"
  exit 1
fi

chmod +x dist/server/index.js
echo "✅ Set executable permissions on dist/server/index.js"
echo "✅ Server TypeScript compiled to dist/"

# Apply path mappings
echo "🔗 Resolving path mappings..."
tsc-alias -p tsconfig.server.json

# Fix imports - add .js extensions
echo "🔄 Fixing import extensions..."
