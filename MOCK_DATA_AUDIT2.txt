server/services/enhanced-ai-service.ts:    if (limit === 0) return [];
server/services/multi-ai-provider.ts:  // Generate actual content if missing or placeholder
server/services/scheduling-optimizer.ts:      return [];
server/services/scheduling-optimizer.ts:      return [];
server/services/scheduling-optimizer.ts:    // For now, return mock trending topics
server/pro-perks.ts:    return [];
server/lib/policyLinter.ts:    // Check flair requirements (placeholder - would need Reddit API integration)
server/lib/workers/post-worker.ts:      // For now, return a placeholder implementation
server/lib/workers/dunning-worker.ts:    // For now, return mock data
server/lib/utm.ts:    return {};
server/lib/utm.ts:    return {};
server/lib/ai-service.ts:      return [];
server/lib/billing/stripe.ts:// Use placeholder key if STRIPE_SECRET_KEY is not configured
server/lib/billing/stripe.ts:const stripeSecretKey = process.env.STRIPE_SECRET_KEY || "sk_test_placeholder_key_for_development_only";
server/api/leads.ts:              <a href="https://forms.gle/survey-placeholder" 
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/storage.ts:      return [];
server/routes.ts:      // Return user's media files (mock for now)
server/routes.ts:      const mockContent = {
server/routes.ts:      res.json(mockContent);
server/auth.ts:  // OAuth routes removed - placeholder routes created unnecessary attack surface
