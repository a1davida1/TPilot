{
    "files.autoSave": "afterDelay",
    "typescript.tsserver.web.projectWideIntellisense.enabled": true,
    "editor.fontSize": 66,
    "editor.codeLensFontSize": 20,
    "editor.inlayHints.fontSize": 10,
    "kiroAgent.configureMCP": "Disabled",
    "kiroAgent.autoApprove": {
        "commands": [
            "npm*"
        ]
    },
    "kiroAgent.trustedCommands": [
        "npm *",
        "find *",
        "npm run lint 2>&1 | head -50",
        "npm run build 2>&1 | head -100",
        "npm run typecheck 2>&1 | head -150",
        "git status",
        "git pull --rebase origin main",
        "git diff .vscode/settings.json",
        "git *",
        "npm run typecheck 2>&1 | head -50",
        "git commit -m \"feat: Add enterprise UX transformation spec and theme system\n\n- Add comprehensive enterprise-ux-transformation spec (requirements, design, tasks)\n- Add advanced-reddit-analytics spec (requirements, design, tasks)\n- Implement Bubblegum Pink and Midnight Rose theme tokens\n- Add theme provider with auto-switching and localStorage persistence\n- Create theme switcher UI component\n- Update platform guide: fix Imgur (primary) / Imgbox (fallback) ordering\n- Complete Phase 1 of UX transformation (Theme System & Design Tokens)\"",
        "git log --oneline --all --grep=\"theme\" | head -20",
        "git log --all --oneline --follow -- client/src/components/theme-provider.tsx | head -5",
        "git show e172b50a --name-status | grep -E \"^[AM]\" | head -20",
        "grep *",
        "git commit -m \"feat(ux): Phase 5 & 6 - Status banners, bulk upload, drag-and-drop scheduling\n\n- Phase 5: Status Banner System\n  - StatusBannerContainer with auto-dismiss (24h localStorage)\n  - useStatusBanners hook for tier limits, cooldowns, post removals\n  - Integrated into dashboard with tier limit warnings\n\n- Phase 6: Bulk Upload & Drag-and-Drop (5/7 complete)\n  - BulkUploadZone: Multi-file upload with progress tracking\n  - ImageLibraryGrid: Responsive grid with multi-select\n  - CaptionEditor: Inline editing with subreddit validation\n  - DraggableImage: @dnd-kit drag-and-drop component\n  - CalendarDropZone: Calendar with tier limits and drop zones\n  - ScheduleModal: Complete scheduling UI with subreddit picker\n\nAll components TypeScript strict-mode compliant, production-ready\"",
        "git log --all --oneline --decorate -- client/src/pages/bulk-caption.tsx | head -5",
        "git add -A && git commit -m \"feat(ux): Phase 8 - Loading States & Empty States complete\n\n- PageSkeletons: Comprehensive skeleton loaders for all page types\n  - GalleryGridSkeleton, CalendarSkeleton, DashboardCardSkeleton\n  - ImageLibrarySkeleton, BulkUploadPageSkeleton\n  - ScheduleQueueSkeleton, AnalyticsChartSkeleton\n  - PostListSkeleton, FormSkeleton\n\n- EmptyState: Reusable empty state component with variants\n  - Default and compact variants\n  - Preset components: NoImagesEmptyState, NoPostsEmptyState\n  - NoScheduledPostsEmptyState, NoAnalyticsDataEmptyState\n  - NoResultsEmptyState, UpgradeRequiredEmptyState\n\n- All components use existing Skeleton and Card primitives\n- Responsive layouts with mobile-first design\n- Ready to integrate into pages\n\nPhase 8 complete: Professional loading and empty states\"",
        "git add -A && git commit -m \"feat(ux): Phase 9 - Error Handling & Recovery complete\n\n- ErrorState: Comprehensive error display component\n  - Inline, card, and page variants\n  - NetworkErrorState, ServerErrorState, OfflineState\n  - PermissionErrorState with upgrade CTA\n  - Recovery instructions and retry buttons\n\n- Retry utilities with exponential backoff\n  - retryWithBackoff function with configurable options\n  - isRetryableError helper for network/5xx errors\n  - useRetry hook for React components\n\n- Draft auto-save system\n  - useDraftAutoSave hook with 30s interval\n  - localStorage persistence\n  - DraftIndicator and DraftRestoreBanner components\n  - Restore/discard functionality\n\n- Offline detection and action queuing\n  - useOfflineDetection hook\n  - Automatic online/offline detection\n  - Queue actions for retry when back online\n  - OfflineBanner and OnlineIndicator components\n\nPhase 9 complete: Robust error handling and recovery\""
    ]
}